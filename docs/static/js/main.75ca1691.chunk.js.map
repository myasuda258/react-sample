{"version":3,"sources":["logo.svg","components/CountForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CountForm","props","count","onClick","setCount","App","useState","count2","setCount2","useEffect","document","title","console","log","useCount","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yLAAe,MAA0B,iC,eCQ5BA,EAA8B,SAAAC,GACzC,OACE,gCACE,6CAAgBA,EAAMC,MAAtB,YACA,wBAAQC,QAAS,kBAAMF,EAAMG,SAASH,EAAMC,MAAQ,IAApD,0BC8BSG,MArCf,WAAe,MAEaC,mBAAS,GAFtB,mBAENJ,EAFM,KAECE,EAFD,OAGeE,mBAAS,GAHxB,mBAGNC,EAHM,KAGEC,EAHF,KAOb,OAsBF,SAAkBN,GAChBO,qBAAU,WACRC,SAASC,MAAT,sBAAgCT,EAAhC,UACAU,QAAQC,IAAR,gBAAqBX,EAArB,aACC,CAACA,IA5BJY,CAASZ,GAGP,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,cAAC,EAAD,CAAWhB,MAAOA,EAAOE,SAAUA,IACnC,cAAC,EAAD,CAAWF,MAAOK,EAAQH,SAAUI,IACpC,mBACEO,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCPOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BZ,K","file":"static/js/main.75ca1691.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\ninterface OwnProps {\r\n  count: number\r\n  setCount: Function\r\n}\r\n\r\ntype Props = OwnProps\r\nexport const CountForm : React.FC<Props> = props => {\r\n  return(\r\n    <div>\r\n      <p>You clicked {props.count} times</p>\r\n      <button onClick={() => props.setCount(props.count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CountForm } from './components/CountForm';\n\nfunction App() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0)\n  const [count2, setCount2] = useState(0)\n\n  useCount(count)\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <CountForm count={count} setCount={setCount}></CountForm>\n        <CountForm count={count2} setCount={setCount2}></CountForm>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nfunction useCount(count: number) {\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n    console.log(`count ${count} times`)\n  }, [count]);\n  return count\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}